{"version":3,"sources":["angular-stomp.es6.js"],"names":["_createClass","defineProperties","target","props","key","prop","configurable","value","writable","Object","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","ngstompProvider","this","settings","credential","login","password","url","_url","_urlWrapper","_x","apply","arguments","toString","class","clazz","setting","settingsObject","debug","boolean","vhost","host","$get","$q","$log","$rootScope","Stomp","ngStompWebSocket","stompClient","over","client","connections","deferred","defer","promiseResult","promise","connect","_this","resolve","$digestStompAction","reject","subscribe","callback","scope","then","$stompSubscribe","unRegisterScopeOnDestroy","unsubscribe","$stompUnSubscribe","send","queue","data","header","sendDeffered","JSON","stringify","disconnect","disconnectionPromise","self","subscription","push","indexToRemove","i","len","length","splice","$$phase","$apply","undefined","angular","isFunction","$on","module","provider","constant","window"],"mappings":"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","file":"angular-stomp.min.js","sourcesContent":["class ngstompProvider {\n\n    constructor() {\n        this.settings = {};\n    }\n\n    credential(login, password) {\n        this.settings.login = login;\n        this.settings.password = password;\n        return this;\n    }\n\n    url(url) {\n        this.settings.url = url;\n        return this;\n    }\n\n    class(clazz) {\n        this.settings.class = clazz;\n        return this;\n    }\n\n    setting(settingsObject) {\n        this.settings = settingsObject;\n        return this;\n    }\n\n    debug(boolean) {\n        this.settings.debug = boolean;\n        return this;\n    }\n\n    vhost(host) {\n        this.settings.vhost = host;\n        return this;\n    }\n\n    /* @ngInject */\n    $get($q, $log, $rootScope, Stomp) {\n        return new ngStompWebSocket(this.settings, $q, $log, $rootScope, Stomp);\n    }\n}\nclass ngStompWebSocket {\n\n    /*@ngNoInject*/\n    constructor(settings, $q, $log, $rootScope, Stomp) {\n        this.settings = settings;\n        this.$q = $q;\n        this.$rootScope = $rootScope;\n\n        this.stompClient = settings.class ? Stomp.over(new settings.class(settings.url)) : Stomp.client(settings.url);\n        this.stompClient.debug = (settings.debug) ? $log.debug : function () {};\n\n        this.connections = [];\n        this.deferred = this.$q.defer();\n        this.promiseResult = this.deferred.promise;\n        this.connect();\n    }\n\n    connect() {\n        this.stompClient.connect(\n            this.settings.login,\n            this.settings.password,\n            () => {\n                this.deferred.resolve();\n                this.$digestStompAction();\n            },\n            () => {\n                this.deferred.reject();\n                this.$digestStompAction();\n            },\n            this.settings.vhost\n        );\n        return this.promiseResult;\n    }\n\n    subscribe(url, callback, scope) {\n        this.promiseResult.then(() => {\n            this.$stompSubscribe(url, callback);\n            this.unRegisterScopeOnDestroy(scope, url);\n        });\n        return this;\n    }\n\n    unsubscribe(url) {\n        this.promiseResult.then(() => this.$stompUnSubscribe(url));\n        return this;\n    };\n\n    send(queue, data, header) {\n        let sendDeffered = this.$q.defer();\n\n        this.promiseResult.then(() => {\n            this.stompClient.send(queue, header || {}, JSON.stringify(data));\n            sendDeffered.resolve();\n        });\n\n        return sendDeffered.promise;\n    };\n\n    disconnect() {\n        let disconnectionPromise = this.$q.defer();\n        this.stompClient.disconnect(() => {\n            disconnectionPromise.resolve();\n            this.$digestStompAction();\n        });\n\n        return disconnectionPromise.promise;\n    }\n\n    $stompSubscribe(queue, callback) {\n        let self = this;\n        let subscription = self.stompClient.subscribe(queue, function() {\n            callback.apply(self.stompClient, arguments);\n            self.$digestStompAction()\n        });\n        this.connections.push({url: queue, subscription: subscription});\n    }\n\n    $stompUnSubscribe(queue) {\n        let indexToRemove = false;\n        for (var i = 0, len = this.connections.length; i < len; i++) {\n            if (this.connections[i].url === queue) {\n                indexToRemove = i;\n                this.connections[i].subscription.unsubscribe();\n                break;\n            }\n        }\n        if (indexToRemove !== false) {\n            this.connections.splice(indexToRemove, 1);\n        }\n    }\n\n    $digestStompAction() {\n        !this.$rootScope.$$phase && this.$rootScope.$apply();\n    }\n\n    unRegisterScopeOnDestroy(scope, url) {\n        if (scope !== undefined && angular.isFunction(scope.$on))\n            scope.$on('$destroy', () => this.unsubscribe(url) );\n    }\n}\nangular.module('AngularStompDK', [])\n    .provider('ngstomp', ngstompProvider)\n    .constant('Stomp', window.Stomp);\n"],"sourceRoot":"/source/"}